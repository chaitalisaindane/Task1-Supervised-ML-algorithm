# -*- coding: utf-8 -*-
"""#Task 1: Prediction using supervised ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_kO69yVCnXOA6k7Tq1PvNJ5j8NJt16Ui

**Prediction using supervised ML algorithm i.e.simple linear regression**

In this problem we have to predict the percentage of student based on the no. of study hours.
this is simple linear regression task because it involves only two variables
"""

#importing all useful libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#Reading the data using link
link = "http://bit.ly/w-data"
task1_data=pd.read_csv(link)
print(task1_data)

#checking first five entries of data
task1_data.head()

#Now plotting the data to check the relationship between variables
task1_data.plot(x='Hours', y='Scores', style='o')  
plt.title('Hours vs Percentage')  
plt.xlabel('Study hours')  
plt.ylabel('Percentage Score')  
plt.show()

"""from graph we have clear idea that there is positive relation between the study hours and the percentage score. """

#preparing data as x and y variable 
X = task1_data.iloc[:,:-1].values  
y = task1_data.iloc[:, 1].values

#Splitting of data
#now we have to split data into training and test data so we will use train_test_split method

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

"""Now here we splitted our data next we have to train our model."""

#fitting algorithm
from sklearn.linear_model import LinearRegression
R=LinearRegression()
model=R.fit(X_train,y_train)

#predicting the train and test score
R.score(X_train,y_train)

R.score(X_test,y_test)

#scores for y_intercept
model.intercept_

#Slope
model.coef_

# Plotting the regression line
line = R.coef_*X+R.intercept_

# Plotting for the test data
plt.scatter(X, y)
plt.plot(X, line);
plt.show()

"""Now we have to predict the score if a student studies for 9.25hr/day.

Now we have equation of simple linear regression as

 y=aX+b
 
 where a is the slope (estimated coefficient)
 ans b is the intercept

"""

#Now we have hours=9.25
hours=9.25
pred_score=hours*model.coef_ + model.intercept_
print("No of Hours = {}".format(hours))
print("Predicted_Score = {}".format(pred_score[0]))

"""Now we find the coefficient of determination i.e.R^2 

which is measure gives the proportion of variation in the dependent variable that is predictable from the independent variable
"""

#coefficient of determination
model.score(X,y)

"""so we know that coefficient of determination is the how good the regression model fits the observed data

here our score is 0.9527 which is shows that 95% of the data fits the regression model
"""

